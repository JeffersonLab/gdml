#!/bin/csh

#GDML Configure script

#This script will generate MyConfigure.*, source it, and then fully compile the GDML Toolkit.

#MyConfigure.* can then be edited by hand and resourced manually to Reconfigure GDML

#Alternatively run this script again.


#Author: Ben Lloyd 28/01/2007 ben.lloyd@cern.ch

echo ""
echo ""
echo "                                -- Welcome to GDML Setup --      "
echo ""


set filecsh = "MyConfigure.csh"
set filesh = "MyConfigure.sh"

if ( -e $filecsh || -e $filesh ) then
    echo "MyConfigure.* file already exists: Continuing will OVERWRITE the old script, are you sure? [y/n]"
    set answer = $<

    switch ($answer)
	case [yY]:
	    if ( -e $filecsh ) then
		rm $filecsh
	    endif
	    if ( -e $filesh ) then
		rm $filesh
	    endif
	    breaksw
	case [nN]:
	    echo "GDML Setup aborted - Script will exit.."
	    echo
	    exit
	default:
	    echo "**Error: Invalid option - Script will exit.."
	    echo
	    exit
    endsw
endif

echo
echo "The following prompts will ensure the correct dependency paths are set up for"
echo "the installation of the GDML Toolkit.  You will also be able to enable/disable"
echo "installation options.."
echo
echo "*********************************************************************"
echo " 1. To Accept the default path given - hit enter"
echo " 2. To Introduce your own path - please enter it at the prompt"
echo " 3. To answer [y/n] questions  - enter 'y' or 'n' and hit enter"
echo "                           OR  - simply hit enter to use the DEFAULT"
echo "*********************************************************************"
echo
echo "[press enter to continue]"
set cont = $<

echo '#\!/bin/csh' > $filecsh
echo '#\!/bin/sh' > $filesh
echo "#This file is automatically generated from the information inputted into GDMLSetup" >> $filecsh
echo "#This file is automatically generated from the information inputted into GDMLSetup" >> $filesh
chmod 755 $filecsh
chmod 755 $filesh
echo >> $filecsh
echo >> $filecsh
echo >> $filesh
echo >> $filesh

set lcgext =  /afs/cern.ch/sw/lcg/external

#echo "setenv LCGEXT $lcgext" >> $filecsh 
#echo >> $filecsh
#echo "export LCGEXT=$lcgext" >> $filesh 
#echo >> $filesh

set platform = slc4_ia32_gcc34
echo
echo "PLATFORM: Accept [ $platform ] or Introduce ('Linux-g++' for generic Linux or 'Darwin-g++' for MacOSX)?"

set answer = $<
if ( $answer != "") then
    set platform = $answer
endif
#echo 'if !(${?PLATFORM}) then' >> $filecsh
#echo 'if [ ! $PLATFORM ] then' >> $filesh

echo "setenv PLATFORM $platform" >> $filecsh
echo "export PLATFORM=$platform" >> $filesh

#echo "endif" >> $filecsh
#echo "fi" >> $filesh
echo >> $filecsh
echo >> $filesh

echo ./configure --with-platform=${platform} \\ >> $filecsh
echo ./configure --with-platform=${platform} \\ >> $filesh


set xercesc = ${lcgext}/XercesC/2.7.0/${platform}
echo
echo "XERCESC: Accept [ $xercesc ] or Introduce?"
echo "NB: This dependency path must contain the 'lib' and 'include' directories for XercesC"
set answer = $<
if ( $answer != "") then
    set xercesc = $answer
endif
echo '            '--with-xercesc="$xercesc" \\ >> $filecsh
echo '            '--with-xercesc="$xercesc" \\ >> $filesh


set clhep = ${lcgext}/clhep/2.0.3.1/${platform}
echo
echo "CLHEP: Accept [ $clhep ] or Introduce?"
echo "NB: This dependency path must contain the 'lib' and 'include' directories for clhep"
set answer = $<
if ( $answer != "") then
    set clhep = $answer
endif
echo '            '--with-clhep="$clhep" \\ >> $filecsh
echo '            '--with-clhep="$clhep" \\ >> $filesh


set geant4 = ${lcgext}/geant4/8.2.p01/${platform}
echo
echo "GEANT4: Accept [ $geant4 ] or Introduce?"
set answer = $<
if ( $answer != "") then
    set geant4 = $answer
endif
echo '            '--with-geant4="$geant4" \\ >> $filecsh
echo '            '--with-geant4="$geant4" \\ >> $filesh


set geant4inc = ${lcgext}/geant4/8.2.p01/share/include
echo
echo "GEANT4 INCLUDES: Accept [ $geant4inc ] or Introduce?"
set answer = $<
if ( $answer != "") then
    set geant4inc = $answer
endif
echo '            '--with-geant4-include="$geant4inc" \\ >> $filecsh
echo '            '--with-geant4-include="$geant4inc" \\ >> $filesh


set geant4lib = ${lcgext}/geant4/8.2.p01/${platform}/lib
echo
echo "GEANT4 LIBRARIES: Accept [ $geant4lib ] or Introduce?"
set answer = $<
if ( $answer != "") then
    set geant4lib = $answer
endif
echo '            '--with-geant4-libdir="$geant4lib" \\ >> $filecsh
echo '            '--with-geant4-libdir="$geant4lib" \\ >> $filesh


echo
echo "Would you like to enable the building of GDML Dynamic Libraries? Default:YES  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    breaksw
	case [nN]:
	    breaksw
        default:
	    echo "Default value [YES] used"
	    set answer = y
endsw

echo
echo "Would you like to enable the building of GDML Static Libraries? Default:NO  [y/n]"
set answer2 = $<
switch ($answer2)
	case [yY]:
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-shared=yes --enable-static=yes \\ >> $filecsh
		    echo '            '--enable-shared=yes --enable-static=yes \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-shared=no --enable-static=yes \\ >> $filecsh
		    echo '            '--enable-shared=no --enable-static=yes \\ >> $filesh
		    breaksw
	    endsw
	    breaksw
	case [nN]:
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-shared=yes --enable-static=no \\ >> $filecsh
		    echo '            '--enable-shared=yes --enable-static=no \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-shared=no --enable-static=no \\ >> $filecsh
		    echo '            '--enable-shared=no --enable-static=no \\ >> $filesh
		    breaksw
	    endsw
	    breaksw
        default:
	    echo "Default value [NO] used"
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-shared=yes --enable-static=no \\ >> $filecsh
		    echo '            '--enable-shared=yes --enable-static=no \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-shared=no --enable-static=no \\ >> $filecsh
		    echo '            '--enable-shared=no --enable-static=no \\ >> $filesh
		    breaksw
	    endsw
endsw


echo
echo "Would you like to enable the building of a GDML Single Library? Default:YES  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    echo '            '--enable-single=yes \\ >> $filecsh
	    echo '            '--enable-single=yes \\ >> $filesh
	    breaksw
	case [nN]:
	    echo '            '--enable-single=no \\ >> $filecsh
	    echo '            '--enable-single=no \\ >> $filesh
	    breaksw
        default:
	    echo "Default value [YES] used"
	    echo '            '--enable-single=yes \\ >> $filecsh
	    echo '            '--enable-single=yes \\ >> $filesh
endsw

echo
echo "Would you like to enable the building of GDML Granular Libraries? Default:NO  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    echo '            '--enable-granular=yes \\ >> $filecsh
	    echo '            '--enable-granular=yes \\ >> $filesh
	    breaksw
	case [nN]:
	    echo '            '--enable-granular=no \\ >> $filecsh
	    echo '            '--enable-granular=no \\ >> $filesh
	    breaksw
        default:
	    echo "Default value [NO] used"
	    echo '            '--enable-granular=no \\ >> $filecsh
	    echo '            '--enable-granular=no \\ >> $filesh
endsw


echo
echo "Would you like to enable the linking against granular rather than global Geant4 libs? Default:NO  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    echo '            '--enable-geant4-granular-libs=yes \\ >> $filecsh
	    echo '            '--enable-geant4-granular-libs=yes \\ >> $filesh
	    breaksw
	case [nN]:
	    echo '            '--enable-geant4-granular-libs=no \\ >> $filecsh
	    echo '            '--enable-geant4-granular-libs=no \\ >> $filesh
	    breaksw
        default:
	    echo "Default value [NO] used"
	    echo '            '--enable-geant4-granular-libs=no \\ >> $filecsh
	    echo '            '--enable-geant4-granular-libs=no \\ >> $filesh
endsw


echo
echo "Would you like to enable GDML diagnostic runtime output? Default:YES  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    breaksw
	case [nN]:
	    breaksw
        default:
	    echo "Default value [YES] used"
	    set answer = y
endsw

echo
echo "Would you like to enable verbose GDML compile output? Default:NO  [y/n]"
set answer2 = $<
switch ($answer2)
	case [yY]:
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=yes \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=yes \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=yes \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=yes \\ >> $filesh
		    breaksw
	    endsw
	    breaksw
	case [nN]:
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=no \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=no \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=no \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=no \\ >> $filesh
		    breaksw
	    endsw
	    breaksw
        default:
	    echo "Default value [NO] used"
	    switch ($answer)
		case [yY]:
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=no \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=yes --enable-compile-verbose=no \\ >> $filesh
		    breaksw
		case [nN]:
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=no \\ >> $filecsh
		    echo '            '--enable-gdml-verbose=no --enable-compile-verbose=no \\ >> $filesh
		    breaksw
	    endsw
endsw



echo
echo "Would you like to enable the StepWriter? Default:NO  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    echo '            '--enable-build-stepwrt=yes \\ >> $filecsh
	    echo '            '--enable-build-stepwrt=yes \\ >> $filesh
	    breaksw
	case [nN]:
	    echo '            '--enable-build-stepwrt=no \\ >> $filecsh
	    echo '            '--enable-build-stepwrt=no \\ >> $filesh
	    breaksw
        default:
	    echo "Default value [NO] used"
	    echo '            '--enable-build-stepwrt=no \\ >> $filecsh
	    echo '            '--enable-build-stepwrt=no \\ >> $filesh
endsw


echo
echo "Would you like to enable NIST support? Default:NO  [y/n]"
set answer = $<
switch ($answer)
	case [yY]:
	    echo '            '--enable-nist=yes \\ >> $filecsh
	    echo '            '--enable-nist=yes \\ >> $filesh
	    breaksw
	case [nN]:
	    echo '            '--enable-nist=no \\ >> $filecsh
	    echo '            '--enable-nist=no \\ >> $filesh
	    breaksw
        default:
	    echo "Default value [NO] used"
	    echo '            '--enable-nist=no \\ >> $filecsh
	    echo '            '--enable-nist=no \\ >> $filesh
endsw


echo
echo "Would you like to set directories to copy built GDML Includes and Libraries to? Default:YES  [y/n]"
set copyanswer = $<

switch($copyanswer)
	case [yY]:
	    breaksw
        case [nN]:
	    echo
	    echo "***************************************************************"
	    echo " MyConfigure.* created"
	    echo
	    echo " Next Step: Sourcing MyConfigure.csh.."
	    echo "***************************************************************"
	    breaksw
         default:
	    echo "Default value [YES] used"
	    set copyanswer = "y"
endsw

if ( $copyanswer == "y" || $copyanswer == "Y") then
    echo
    echo
    echo " You now need to specify which directories the GDML Toolkit Includes and Libraries are copied to.."
    echo " The locations chosen will be created for you if they do not exist."
    echo
	    
    set gdmltop = ${PWD}/../..
    echo
    set gdmllibs = "$gdmltop/$platform"
    echo " GDML LIBRARIES DIRECTORY: Accept [ $gdmllibs ] or Introduce?"
    set answer = $<
    if ( $answer != "") then
	set gdmllibs = $answer
    endif
    test -d $gdmllibs  || mkdir -p $gdmllibs
	    set gdmlincs = "$gdmltop/include"
    echo
    echo " GDML INCLUDES DIRECTORY: Accept [ $gdmlincs ] or Introduce?"
    set answer = $<
    if ( $answer != "") then
	set gdmlincs = $answer
    endif
    test -d $gdmlincs  || mkdir -p $gdmlincs

    echo
    echo " You have selected the following directories:"
    echo '            '--bindir="$gdmllibs/bin" \\ >> $filecsh
    echo '            '--bindir="$gdmllibs/bin" \\ >> $filesh
    echo '            '--libdir="$gdmllibs/lib" \\ >> $filecsh
    echo '            '--libdir="$gdmllibs/lib" \\ >> $filesh
    echo '            '--includedir="$gdmlincs" \\ >> $filecsh
    echo '            '--includedir="$gdmlincs" \\ >> $filesh
    echo " GDML Libraries: $gdmllibs"
    echo " GDML Includes:  $gdmlincs"
    echo


    echo
    echo "Would you like the includes copied in a flat structure without their original full path? Default:YES  [y/n]"
    echo
    echo 'e.g. Schema includes copied to $INCLUDEDIR/Schema/ '
    echo '                  instead of.. $INCLUDEDIR/Common/Schema/Schema'          
    set answer = $<
    switch ($answer)
	    case [yY]:
		echo '            '--enable-flat-include=yes \\ >> $filecsh
		echo '            '--enable-flat-include=yes \\ >> $filesh
		breaksw
	    case [nN]:
		echo '            '--enable-flat-include=no \\ >> $filecsh
		echo '            '--enable-flat-include=no \\ >> $filesh
		breaksw
	    default:
		echo "Default value [YES] used"
		echo '            '--enable-flat-include=yes \\ >> $filecsh
		echo '            '--enable-flat-include=yes \\ >> $filesh
    endsw

    echo
    echo "***************************************************************"
    echo " MyConfigure.* created & Includes DIR & Libraries DIR set..."
    echo
    echo " Next Step: Sourcing MyConfigure.csh.."
    echo "***************************************************************"
endif


echo "" >> $filecsh
echo "echo" >> $filecsh
echo "echo" >> $filecsh
echo "echo '****************** Local Settings from Autoconf ******************'" >> $filecsh
echo "cat ./config/make/local_settings.gmk" >> $filecsh

echo "" >> $filesh
echo "echo" >> $filesh
echo "echo" >> $filesh
echo "echo '****************** Local Settings from Autoconf ******************'" >> $filesh
echo "cat ./config/make/local_settings.gmk" >> $filesh


echo
echo "[press enter to continue]"
set cont = $<
source MyConfigure.csh
echo
echo "****************************************************************"
echo " File sourced - check output for errors.."
echo
echo " Next Step: Build using 'make'.."
echo "****************************************************************"
echo
echo "[press enter to continue]"
set cont = $<
make
echo
echo "********************************************************************"
echo " Make Completed - check output for errors.."
echo "********************************************************************"
echo
echo "[press enter to continue]"
set cont = $<

if ( $copyanswer == "y" || $copyanswer == "Y") then

    echo
    echo "Would you like to to copy your built GDML Includes and Libraries NOW using 'make install'? Default:YES  [y/n]"
    set answer = $<
    
    switch($answer)
	    case [yY]:
		set copy = 1
		breaksw
	    case [nN]:
		set copy = 0
		breaksw
	    default:
		echo "Default value [YES] used"
		echo
		set copy = 1
    endsw
 endif

if ( $copy == 1) then
    
	make install
	echo
	echo
	echo "Lib's Successfully Copied to $gdmllibs"	    
	echo "Inc's Successfully Copied to $gdmlincs"

endif

echo
echo "****************************************************************************"
echo "*                                                                          *"
echo "*                      -- INSTALLATION COMPLETE --                         *"
echo "*                                                                          *"
echo "*  To ReCompile use 'make'                                                 *"
echo "*                                                                          *"
echo "*  To copy your new Librarys and Inludes then use 'make install'           *"
echo "*                                                                          *"
echo "*  To reconfigure run GDMLSetup again OR edit MyConfigure.csh/sh by hand   *"
echo "*                                                                          *"
echo "****************************************************************************"
