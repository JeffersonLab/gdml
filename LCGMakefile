
# This makefile is used for building GDML at CERN,
# it may not be of use in other contexts.

ifndef ${GDMLTOP}
GDMLTOP=${PWD}/..
endif


GDMLTARDIR = ${GDMLTOP}/../downloads

GDML_VERSION = 2_2_0
GDMLSCHEMA_VERSION = 2_1_1
CPPGDML_VERSION = 2_2_0
PYGDML_VERSION = 1_1_0

export PLATFORM=${SCRAM_ARCH}

G4BIND_INC = G4Processor G4Subscribers G4Writer
COMMON_INC = Saxana Schema Writer Processes

TARFILE_G4B = "CPPGDML_${VERSION}.tgz"
G4BIND_LIBS = ${addprefix ${GDMLTOP}/lib,${addsuffix .so,${G4BIND_INC}} }

TARFILE_COM = "CPPGDML_${VERSION}.tgz"
COMMON_LIBS = ${addprefix ${GDMLTOP}/lib,${addsuffix .so, ${COMMON_INC:}} }

TARFILE_ALL = "GDML_${VERSION}.tgz"

release: release-build release-install

release-build:
	cd ${GDMLTOP}/src/CPPGDML ; . CERNConfigure.sh; make; cd ..
	cd ${GDMLTOP}/src/PyGDML/G4Binding ; . g4setup.sh ; make ; cd ../..
	cd ${GDMLTOP}/src/PyGDML/Examples/G4RunExample ; . exsetup.sh ; make ; cd ../../..

release-install: release-install-libs release-install-includes

release-install-libs:
	test -d "${GDMLTOP}/${SCRAM_ARCH}"  || mkdir -p ${GDMLTOP}/${SCRAM_ARCH}
	cd ${GDMLTOP}/${SCRAM_ARCH} ;\
	cp -r ${GDMLTOP}/src/CPPGDML/build/${SCRAM_ARCH}/lib ./  ;\
	cp -r ${GDMLTOP}/src/CPPGDML/build/${SCRAM_ARCH}/bin ./

release-install-includes:
	test -d "${GDMLTOP}/include" || mkdir -p ${GDMLTOP}/include
	cd ${GDMLTOP}/src/CPPGDML ; \
	for pak in $(COMMON_INC); do \
	   cp -f -r Common/$$pak/$$pak ${GDMLTOP}/include ;\
	done
	cd ${GDMLTOP}/src/CPPGDML ; \
	for pak in $(G4BIND_INC);  do \
	  cp -f -r G4Binding/$$pak/$$pak ${GDMLTOP}/include ;\
	done

release-tarballs:
	@if [ ! -e ${GDMLTARDIR}/CPPGDML/CPPGDML_${CPPGDML_VERSION}.tar.gz ] ; then \
	  cd ${GDMLTOP}/src ; tar zcf ${GDMLTARDIR}/CPPGDML/CPPGDML_${CPPGDML_VERSION}.tar.gz --exclude=CPPGDML/build CPPGDML ;\
	else \
	  echo "tarball already existing: " ${GDMLTARDIR}/CPPGDML/CPPGDML_${CPPGDML_VERSION}.tar.gz ;\
	fi
	@if [ ! -e ${GDMLTARDIR}/GDMLSchema/GDMLSchema_${GDMLSCHEMA_VERSION}.tar.gz ] ; then \
	  cd ${GDMLTOP}/src ; tar zcf ${GDMLTARDIR}/GDMLSchema/GDMLSchema_${GDMLSCHEMA_VERSION}.tar.gz GDMLSchema ;\
	else \
	  echo "tarball already existing: " ${GDMLTARDIR}/GDMLSchema/GDMLSchema_${GDMLSCHEMA_VERSION}.tar.gz ;\
	fi
	@if [ ! -e ${GDMLTARDIR}/PyGDML/PyGDML_${PYGDML_VERSION}.tar.gz ] ; then \
	  cd ${GDMLTOP}/src ; tar zcf ${GDMLTARDIR}/PyGDML/PyGDML_${PYGDML_VERSION}.tar.gz PyGDML ;\
	else \
	  echo "tarball already existing: " ${GDMLTARDIR}/PyGDML/PyGDML_${PYGDML_VERSION}.tar.gz ;\
	fi
	@if [ ! -e ${GDMLTARDIR}/GDML_${GDML_VERSION}.tar.gz ] ; then \
	  cd ${GDMLTOP}/src ; tar zcf ${GDMLTARDIR}/GDML_${GDML_VERSION}.tar.gz --exclude=CPPGDML/build * ;\
	else \
	  echo "tarball already existing: " ${GDMLTARDIR}/GDML_${GDML_VERSION}.tar.gz ;\
	fi

clean:
	@echo "cleaning up"
	@rm CPPGDML/build
	@find . -name \*.o -exec rm {} \;
